# kwmutt_gpg_help für kwmutt{{{
TITLE="${lv_Gpg}::${gv_Help}"
MSG=$(gettext 'pgp_autosign: Das Setzen dieser Variable wird Mutt veranlassen,
\timmer einen Versuch zu starten, ausgehende Nachrichten mit
\tPGP/MIME zu signieren. Dieses Verhalten kann unter Benutzung
\tdes pgp-menu geändert werden, falls eine Signierung einmal nicht
\tnötig ist oder zusätzlich verschlüsselt werden soll.
\tDefault ist set pgp_autosign="no"

pgp_autöncrypt: Das Setzen dieser Variable wird Mutt veranlassen,
\timmer einen Versuch zu starten, ausgehende Nachrichten mit
\tPGP/MIME zu verschlüsseln. Dies ist wahrscheinlich nur in
\tVerbindung mit dem Befehl send-hook nuetzlich. Dieses Verhalten
\tkann unter Benutzung des pgp-menu geändert werden, falls
\tVerschlüsselung einmal nicht nötig ist oder zusätzlich signiert
\twerden soll.
\tDefault ist set pgp_autöncrypt="no"

pgp_good_sign: Falls Sie dieser Variable einen regulären Ausdruck
\tzuweisen, wird eine PGP-Signatur nur dann als gültig angesehen,
\tfalls die Ausgabe von $pgp_verify_command diesen Text beinhaltet.
\tBenutze diese Variable, falls der Exit-Code dieses Befehls auch
\tbei ungültigen Signaturen 0 ist.
\tDefault ist set pgp_good_sign="^gpg: Good signature from"

pgp_check_exit: Wenn diese Variable gesetzt ist wird Mutt den Exit
\tStatus Der PGP-Subprozesse beim signieren oder verschlüsseln
\tüberprüfen.
\tDefault ist set pgp_check_exit="yes"

pgp_long_ids: Falls diese Variable gesetzt ist, werden 64 bit
\tPGP-Schlüssel-IDs benutzt. Ist sie ungesetzt, werden die
\tnormalen 32 bit Schlüssel-IDs verwendet.
\tDefault ist set pgp_long_ids="no"

pgp_retainable_sigs: Wenn diese Variable gesetzt ist, besteht der
\tBody (Rumpf) signierter und verschlüsselter Nachrichten aus
\tverschachtelten multipart/signed und multipart/encrypted Teilen. 
\tDas ist für Anwendungen wie verschlüsselte und signierte
\tMailing-Listen nuetzlich, wo die äussere Schicht
\t(multipart/encrypted) leicht entfernt werden kann, während der
\tinnere multipart/signed-Teil erhalten bleibt.
\tDefault ist set pgp_retainable_sigs="no"

pgp_show_unusable: Falls diese Variable gesetzt ist, wird Mutt auch
\tunbrauchbare Schlüssel im PGP-Schlüsselauswahlmenue anzeigen.
\tDies beinhaltet Schlüssel, die zurückgerufen wurden, abgelaufen
\toder vom Benutzer gesperrt worden sind.
\tDefault ist set pgp_show_unusable="yes"

pgp_sign_as: Falls Sie mehr als ein Schlüsselpaar haben, erlaubt es
\tIhnen diese Option, den privaten Schlüssel zu bestimmen, den Sie
\tbenutzen wollen. Es wird empfohlen, dass Sie die Schlüssel-ID zur
\tAngabe Ihres Schlüssels benutzen (z.B. "0x00112233").

pgp_strict_enc: Falls diese Variable gesetzt ist, wird Mutt PGP/MIME
\tsignierte Nachrichten automatisch in quoted-printable kodieren.
\tBeachte bitte, dass das Ändern dieser Variable zu Problemen mit
\tnicht überprüfbaren PGP Signaturen führen kann. Ändern Sie
\tdies also nur, wenn Sie wisen, was Sie tuen.
\tDefault ist set pgp_strict_enc="yes"

pgp_timeout: Diese Variable gibt die Zeit in Sekunden an, nach der
\tein PGP-Mantra aus dem Speicher gelöscht wird, wenn es nicht
\tmehr benutzt wurde.
\tDefault ist set pgp_timeout="300"

pgp_sort_keys: Gibt an, wie die Einträge im "pgp Schlüssel"-Menü
\tsortiert werden. Folgende Werte sind gültig:
\taddress - sortiert alphabetisch nach Benutzer-ID 
\tkeyid - sortiert alphabetisch nach Schlüssel-ID 
\tdate - sortiert nach Erstellungsdatum des Schlüssels 
\ttrust - sortiert nach Vertrauenswuerdigkeit des Schlüssels 
\tWenn Sie eine umgekehrte Sortierreihenfolge bevorzugen, können
\tSie zusätzlich reverse- vor die Werte stellen.
\tDefault ist set pgp_sort_keys="address"

pgp_auto_decode: Falls diese Variable gesetzt ist versucht Mutt
\tautomatisch Nachrichten nach der altmodischen Art zu
\tentschlüsseln.
\tDefault ist set pgp_auto_decode="no"

pgp_decode_command: Diese Zeichenkette gibt einen Befehl an, der
\tverwendet wird, um application/pgp Anhänge zu dekodieren.
\tIn den "PGP command"-Variablen kann eine eigene Auswahl printf-
\tähnlicher Platzhalter verwendet werden:
\t%p - Wird durch PGPPASSFD=0 ersetzt, wenn ein Mantra erforderlich
\tist, sonst zu einer leeren Zeichenkette. Anmerkung: Kann mit einem
\t%?-Konstrukt verwendet werden. 
\t%f - Wird durch den Namen der Datei ersetzt, die die Nachricht
\tenthält.
\t%s - Wird durch den Namen der Datei ersetzt, die den Signatur-Teil
\teines multipart/signed-Anhangs enthält, der überprüft werden
\tsoll. 
\t%a - Der Wert von $pgp_sign_as
\t%r - Eine oder mehrere Schlüssel-IDs
\tDefault ist set pgp_decode_command="gpg --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"

pgp_getkeys_command: Dieser Befehl wird aufgerufen, wenn Mutt
\tInformationen über öffentliche Schlüssel benötigt. %r ist der
\teinzige Platzhalter, der in dieser Variablen Verwendung findet.
\tDefault ist set pgp_getkeys_command=""

pgp_verify_command: Dieser Befehl wird verwendet, um PGP/MIME-
\tSignaturen zu überprüfen.
\tDefault ist set pgp_verify_command="gpg --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"

pgp_decrypt_command: Dieser Befehl wird gebraucht, um mit PGP/MIME
\tverschlüsselte Nachrichten zu dekodieren.
\tDefault ist set pgp_decrypt_command="gpg --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"

pgp_sign_command: Dieser Befehl wird verwendet, um die separate PGP-
\tSignatur eines multipart/signed PGP/MIME Body-Teils zu erzeugen.
\tDefault ist set pgp_sign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0? --armor --detach-sign --textmode %?a?-u %a? %f"

pgp_encrypt_sign_command: Dieser Befehl wird verwendet, um einen
\tTeil des Nachrichtenrumpfs (Bodys) gleichzeitig zu signieren und
\tzu verschlüsseln. Wenn Sie Kopien Ihrer verschlüsselten Antwort
\toder versendeten Nachricht erneut anschauen wollen müssen Sie
\tdie Nachrichten mit einem 2. (Ihrem) öffentlichen Schlüssel
\tverschlüsseln, da Sie den privaten Schlüssel der anderen Person
\tnicht besitzen. Dazu müssen Sie --encrypt-to 0xKey-ID mit in den
\tBefehl mit aufnehmen. Diese Option sollte am besten nach der
\t--encrypt Option gesetzt werden (s. Beispiel). Die Zeichenkette
\tKEY-ID müssen Sie mit Ihrer Schlüssel-Id ersetzen. Ihre
\tSchlüssel-Id bekommen Sie mit dem Befehl (gnupg)
\tgpg --list-public-keys IhrName heraus. Bei der Ausgabe des Befehls
\twird folgende Zeile benötigt.
\tpub   1024D/nnnnnnnn 2006-04-28
\tHinter dem Slash-Zeichen (/) ist eine 8-stellige Nummer, hier mit n
\tdargestellt, die Ihre Schlüssel-Id ist.
\tBeispiel set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap gpg %?p?--passphrase-fd 0? --batch --quiet --no-verbose --textmode --output - --encrypt --encrypt-to 0xKEY-ID --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
\t
\tDefault ist set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap gpg %?p?--passphrase-fd 0? --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

\tNOTIZ: Das gleiche gilt für den Befehl pgp_encrypt_only_command.

pgp_encrypt_only_command: Dieser Befehl wird verwendet, um einen
\tTeil des Nachrichtenrumpfs (Bodys) zu verschlüsseln, ohne ihn
\tzu signieren.
\tDefault ist set pgp_encrypt_only_command="/usr/lib/mutt/pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

pgp_import_command: Dieser Befehl wird verwendet, um einen
\tSchlüssel aus einer Nachricht in den öffentlichen
\tSchlüsselbund des Benutzers zu importieren.
\tDefault ist set pgp_import_command="gpg --no-verbose --import %f"

pgp_export_command: Dieser Befehl wird verwendet, um einen
\töffentlichen Schlüssel aus dem Schlüsselbund des Benutzers
\tzu exportieren.
\tDefault ist set pgp_export_command="gpg --no-verbose --export --armor %r"

pgp_verify_key_command: Dieser Befehl wird verwendet, um Schlüssel-
\tInformationen aus dem Menü zur Schlüssel-Auswahl zu überprüfen.
\tDefault ist set pgp_export_command="gpg --verbose --batch --fingerprint --check-sigs %r"

pgp_list_pubring_command: Dieser Befehl wird verwendet, um den
\tInhalt des geheimen Schlüsselbundes auszugeben. Das Ausgabe-Format
\tmuss das gleiche sein wie das von gpg --list-keys --with-colons
\terzeugte.
\tDieses Format wird auch vom Hilfsprogramm pgpring erzeugt, das mit
\tMutt ausgeliefert wird.
\tDefault ist set pgp_export_command="gpg --no-verbose --batch --quiet --with-colons --list-keys %r"

pgp_list_secring_command: Dieser Befehl wird verwendet, um den
\tInhalt des öffentlichen Schlüsselbundes auszugeben. Das Ausgabe-
\tFormat muss das gleiche sein wie das von gpg --list-keys --with-colons
\terzeugte.
\tDieses Format wird auch vom Hilfsprogramm pgpring erzeugt, das mit
\tMutt ausgeliefert wird.
\tDefault ist set pgp_export_command="gpg --no-verbose --batch --quiet --with-colons --list-secret-keys %r"

forward_decrypt: Diese Variable kontrolliert den Umgang mit
\tverschlüsselten Nachrichten beim Weiterleiten einer Nachricht.
\tFalls sie gesetzt ist, wird die äussere Schicht der
\tVerschlüsselung entfernt. Diese Variable wird nur benutzt, wenn
\tmime_forward gesetzt und mime_forward_decode ungesetzt ist.
\tDefault ist set forward_decrypt="yes"
')
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
