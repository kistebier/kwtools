# kwmutt_smime_help für kwmutt{{{
TITLE="${lv_Smime}::${gv_Help}"
MSG=$(gettext 'Hier können Sie Einstellungen für die Sicherheit von eingehenden
\tund ausgehenden Nachrichten per S/MIME einrichten.

smime_is_default: Soll OpenSSL zur Verschlüsselung genutzt werden
\t(Ja/Nein)? Normalerweise benutzt Mutt PGP zur Verschlüsselung.
\tDies hat keinen Effekt auf das Antworten von Nachrichten. Mutt
\twird automatisch das Programm aufrufen welches in der original
\tNachricht verwendet wurde.
\tDefault ist set smime_is_default="no"

smime_ca_location: Diese Variable beinhaltet ein Verzeichnis oder
\tDateien die Ihre gesicherten Zertifikate enthält.
\tDefault ist set smime_ca_location=""

NOTIZ: Auf Debian Systemen wird standardmässig in folgender
\tReihenfolge gesucht: ~/.smime/ca-certificates.crt
\t~/.smime/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt.
\tDie erste gefundende Datei wird als erstes benutzt.

smime_certificates: Pfad zum Verzeichnis in der die Zertifikate
\tgespeichert und gehandelt werden.
\tDefault ist set smime_certificates="~/.smime/certificates"

smime_keys: Pfad zum Verzeichnis in der die Schlüssel gespeichert
\tund gehandelt werden.
\tDefault ist set smime_keys="~/.smime/keys"

smime_default_key: Diese Variable beinhaltet das Standard
\tSchlüsselpaar zum signieren ein. Das muss eine Schlüssel-ID
\t(ein von OpenSSL generierter Hash Wert) sein.
\tDefault ist set smime_default_key=""

smime_decrypt_use_default_key: Diese Variable teilt Mutt mit das es
\tden Standard Schlüssel zu Entschlüsselung benutzen soll.
\tAnderenfalls, falls Sie mehrere Zertifikat-Schlüsselpaare
\tbenutzen, wird Mutt versuchen die Mailbox-Adresse nach dem
\tSchlussel zu untersuchen. Falls Mutt keinen Schlüssel findet
\twird Mutt Sie nach einem Schlüssel zur Eingabe fragen.
\tDefault ist set smime_decrypt_use_default_key="yes"

smime_ask_cert_label: Dieses Flag kontrolliert, ob Mutt Sie nach
\tder Eingabe eines Labels für ein Zertifikat fragen soll, welches
\tzur Datenbank hinzugefügt werden soll oder nicht.
\tDefault ist set smime_ask_cert_label="yes"

smime_timeout: Geben Sie an nach wievielen Sekunden die Passphrase
\taus dem Speicher gelöscht werden soll.
\tDefault ist set smime_timeout="300"

smime_decrypt_command: Diese Variable beinhaltet den Befehl um
\tAnhänge vom Typ application/x-pkcs7-mime zu entschlüsseln.
\tDefault ist set smime_decrypt_command="openssl smime -decrypt -passin stdin -inform DER -in %f -inkey %k -recip %c"

smime_encrypt_command: Diese Variable beinhaltet den Befehl um eine
\tS/MIME verschlüsselte Nachricht zu erstellen.
\tDefault ist set smime_encrypt_command="openssl smime -encrypt %a -outform DER -in %f %c"

smime_encrypt_with: Diese Variable setzt den Alghorithmus der für
\tdie Verschlüsselung benutzt werden soll. Zur Auswahl stehen
\t"des", "des3", "rc2-40", "rc2-64", "rc2-128". Falls diese Variable
\tleer ist wird 3des (TripleDES) benutzt.
\tDefault ist set smime_encrypt_with=""

smime_get_cert_command: Diese Variable beinhaltet den Befehl um das
\tX509 Zertifikat einer PKCS7 Struktur zu extrahieren.
\tDefault ist set smime_get_cert_command="openssl pkcs7 -print_certs -in %f"

smime_get_cert_email_command: Diese Variable beinhaltet den Befehl
\tum die Mailadresse zu extrahieren für die Speicherung des X509
\tZertifikats.
\tDefault ist set smime_get_cert_email_command="openssl x509 -in %f -noout -email"

smime_get_signer_cert_command: Diese Variable beinhaltet den Befehl
\tum nur das X509 Zertifikat des Unterzeichners zu extrahieren.
\tDieses wird mit dem From Feld im Header verglichen.
\tDefault ist set smime_get_signer_cert_command="openssl smime -verify -in %f -noverify -signer %c -out /dev/null"

smime_import_cert_command: Diese Variable beinhaltet den Befehl um
\tmittels der Variablen smime_keys Zertifikate zu importieren.
\tDefault ist set smime_import_cert_command="smime_keys add_cert %f"

smime_pk7out_command: Diese Variable beinhaltet den Befehl um PKCS7
\tStrukturen von S/MIME Signaturen zu extrahieren (öffentliches
\tX509 Zertifikat).
\tDefault ist set smime_pk7out_command="openssl smime -verify -in %f -noverify -pk7out"

smime_sign_command: Diese Variable beinhaltet den Befehl um
\teine S/MIME Signatur vom Typ multipart/signed zu erstellen.
\tDefault ist set smime_sign_command="openssl smime -sign -signer %c -inkey %k -passin stdin -in %f -certfile %i -outform DER"

smime_verify_command: Diese Variable beinhaltet den Befehl um eine
\tS/MIME Signatur vom Typ multipart/signed zu überprüfen.
\tDefault ist set smime_verify_command="openssl smime -verify -inform DER -in %s %C -content %f"

smime_verify_opaque_command: Diese Variable beinhaltet den Befehl
\tum eine S/MIME Signatur vom Typ application/x-pkcs7-signature zu
\tüberprüfen.
\tDefault ist set smime_verify_opaque_command="openssl smime -verify -inform DER -in %s %C || openssl smime -verify -inform DER -in %s -noverify 2>/dev/null"
')
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
