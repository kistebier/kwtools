# Funktion um LV's anzuzeigen, erstellen, umbennen, {{{
# verkleinern, vergrössern und löschen.
#
# usage: lv_volumes
lv_volumes() {
	search_pv
	vg_display
	if [ -n "${VG[1]}" ] ; then
		# Variablen
		lv_Enlarge=$(gettext 'vergrössern')
		lv_Reduce=$(gettext 'verkleinern')
		lv_Vol_Group=$(gettext 'Volume_Group')
		lv_LV_Name=$(gettext 'LV_Name')
		lv_Size=$(gettext 'Grösse')
		lv_Snapshot=$(gettext 'Schnappschuss')
		lv_Name=$(gettext 'Name')
		#
		# Funktion (number_size_to_mib), Laufwerksangaben in MebiByte umrechnen# {{{
		number_size_to_mib() {
			unset -- LV_SIZE_MIB
			convert_mib_size "${NUMBER##*[0-9]}" "${NUMBER%%[a-zA-Z]*}"
			if [ -n "$SIZE_MIB" ] ; then
				LV_SIZE_MIB="$SIZE_MIB:r"
			fi
		}
		## }}}
		# Funktion lv_menue{{{
		LV_TITLE=($lv_Logical_Vol)
		LV_MENU=($gv_Display \"\" $gv_Create \"\" $lv_Enlarge \"\"
		$lv_Reduce \"\" $lv_Rename \"\" $gv_Delete \"\" $gv_Back \"\")
		#
		lv_menue() {
			menubox "$1" "$LV_TITLE" "$gv_Menupoint" "$LV_MENU"
		}
		#}}}
		lv_menue
		while [ "$gv_Auswahl" ] ; do
			case "$gv_Auswahl" in
				HELP*)	script_help lv_help
					lv_menue "${gv_Auswahl#HELP }"
					;;
				$gv_Display)
					# Anzeige der LVs{{{
					lv -a
					# Sind LVs vorhanden, werden sie zur Auswahl gestellt.
					if [ "${LV_M[1]}" ] ; then
						# Funktion lv_anzeige_menue{{{
						LV_DISPLAY_MENU=($LV_M)
						LV_DISPLAY_TITLE=(${lv_Logical_Vol}::${gv_Display})
						LV_DISPLAY_MSG=$(gettext 'Wählen Sie ein oder mehrere LVs zur Anzeige aus.')
						lv_anzeige_menue() {
							checklist "$1" "$LV_DISPLAY_TITLE" "$LV_DISPLAY_MSG" "$LV_DISPLAY_MENU"
						}
						#}}}
						lv_anzeige_menue
						while [ "$gv_Auswahl" ] ; do
							case "$gv_Auswahl" in
								HELP*)	script_help lv_help
									lv_anzeige_menue "${gv_Auswahl#HELP }"
									;;
								*)
									# Anzeige der LVs
									lvdisplay ${=gv_Auswahl} >${gv_WorkDir}/lvdisplay
									view_file ${gv_WorkDir}/lvdisplay
									lv_anzeige_menue
									;;
							esac
						done
					else
						no_lv_msg
					fi
					#}}}
					lv_menue $gv_Display
					;;
				$gv_Create)
					# Erstellung von LVs, Snapshots, Caches,...# {{{
					LV_CREATE_TITLE=(${lv_Logical_Vol}::${gv_Create})
					# Funktion (lv_what_create_menu)# {{{
					#
					lv_what_create_menu() {
						LV_WHAT_CREATE_MENU=($lv_LV \"\" $lv_Snapshot \"\" $gv_Back \"\")
						menubox "$1" "$LV_CREATE_TITLE" "$gv_Menupoint" "$LV_WHAT_CREATE_MENU"
					}
					## }}}
					#
					lv_what_create_menu
					while [ -n "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help lv_help
								lv_create_menue "${gv_Auswahl#HELP }"
								;;
							$lv_LV)
								# Erstellung von LVs{{{
								unset -- VG_AUSWAHL LV_NAME SIZE
								# Funktion lv_create_menue{{{
								#
								lv_create_menue() {
									LV_CREATE_MENU=($lv_Vol_Group \"$VG_AUSWAHL\" $lv_LV_Name
									\"$LV_NAME\" $lv_Size \"$SIZE\" $gv_Create \"\" $gv_Back \"\")
									menubox "$1" "$LV_CREATE_TITLE" "$gv_Menupoint" "$LV_CREATE_MENU"
								}
								#}}}
								lv_create_menue
								#
								while [ "$gv_Auswahl" ] ; do
									case "$gv_Auswahl" in
										HELP*)	script_help lv_create_help
											lv_create_menue "${gv_Auswahl#HELP }"
											;;
										$lv_Vol_Group)
											# VG auswählen{{{
											LV_VG_MENU=($VG_M)
											LV_VG_TITLE=(${lv_Logical_Vol}::${lv_Vol_Group})
											LV_VG_MSG=$(gettext 'Wählen Sie eine VG aus, auf der ein LV erzeugt werden soll.')
											radiolist "" "$LV_VG_TITLE" "$LV_VG_MSG" "$LV_VG_MENU"
											while [ "$gv_Auswahl" ] ; do
												case "$gv_Auswahl" in
													HELP*)	script_help vg_auswahl_help
														radiolist "${gv_Auswahl#HELP }" "$LV_VG_TITLE" "$LV_VG_MSG" "$LV_VG_MENU"
														;;
													*)	VG_AUSWAHL="$gv_Auswahl"
														break
														;;
												esac
											done
											#}}}
											lv_create_menue $lv_Vol_Group
											;;
										$lv_LV_Name)
											# LV Namen eingeben, ohne Leerzeichen{{{
											LV_NAME_TITLE=(${lv_Logical_Vol}::${lv_LV_Name})
											LV_NAME_MSG=$(gettext 'Geben Sie bitte hier den Namen ihrer neuen $lv_LV, ohne Leerzeichen, ein.')
											U_OPT="-"
											inputbox "$LV_NAME_TITLE" "$LV_NAME_MSG" "$LV_NAME"
											if [ "$gv_Auswahl" ] ; then
												if ! lvdisplay /dev/${VG_AUSWAHL:-**}/${gv_Auswahl} &>/dev/null ; then
													LV_NAME="$gv_Auswahl"
												else
													MSG=$(gettext 'Der Name für dieses $lv_LV existiert schon.')
													msgbox "$gv_Info" "$MSG"
												fi
											else
												LV_NAME=""
											fi
											#}}}
											lv_create_menue $lv_LV_Name
											;;
										$lv_Size)
											# Grösse des LV angeben{{{
											if [ -n "$VG_AUSWAHL" ] ; then
												vg_free_size "$VG_AUSWAHL"
												#
												LV_SIZE_TITLE=(${lv_Logical_Vol}::${lv_Size})
												LV_SIZE_MSG=$(gettext 'Geben Sie bitte hier die Grösse ihres neuen LV ein (1GiB = 1GigaByte = 1024 Megabyte). Es sind noch "$VG_FREE_SIZE_ME" frei.')
												#
												number_input -D "$LV_SIZE_TITLE" "$LV_SIZE_MSG" "$SIZE"
												if [ -n "$NUMBER" ] ; then
														# Laufwerksangaben (NUMBER) in Byte umrechnen
														number_size_to_mib
														if [[ "$LV_SIZE_MIB" -le "$VG_FREE_SIZE" ]] ; then
														SIZE="$NUMBER"
														CREATE_SIZE="${LV_SIZE_MIB}m"
													else
														over_size_msg
														unset -- SIZE CREATE_SIZE
													fi
												fi
											else
												no_select_vg_msg
											fi
											#}}}
											lv_create_menue $lv_Size
											;;
										$gv_Create)
											# LV erzeugen{{{
											if [ -n "$VG_AUSWAHL" -a -n "$LV_NAME" -a -n "$CREATE_SIZE" ] ; then
												lvcreate -v -n $LV_NAME -L${CREATE_SIZE} $VG_AUSWAHL 2>&1 | \
													progressbox $gv_Create "$LV_NAME" || \
													prog_failure
												#
												# Formatieren yes/no
												#
												format "/dev/${VG_AUSWAHL}/${LV_NAME}"
												break
											else
												MSG=$(gettext 'Sie müssen erst die Menüpunkte $lv_Vol_Group, $lv_LV_Name und $lv_Size einstellen.')
												msgbox "$gv_Attention" "$MSG"
												lv_create_menue
											fi
											#}}}
											;;
										$gv_Back)	break
											;;
									esac
								done
								#}}}
								lv_what_create_menu $lv_LV
								;;
							$lv_Snapshot)
								# Erstellung von Snapshots# {{{
								unset -- LV_AUSWAHL VG_AUSWAHL SNAP_NAME SIZE
								# Funktion lv_snapshot_menu{{{
								#
								lv_snapshot_menu() {
									LV_SNAPSHOT_MENU=($lv_Logical_Vol \"$LV_AUSWAHL\" $lv_Name
									\"$SNAP_NAME\" $lv_Size \"$SIZE\" $gv_Create \"\" $gv_Back \"\")
									menubox "$1" "$LV_CREATE_TITLE" "$gv_Menupoint" "$LV_SNAPSHOT_MENU"
								}
								#}}}
								lv_snapshot_menu
								#
								while [ "$gv_Auswahl" ] ; do
									case "$gv_Auswahl" in
										HELP*)	script_help lv_snapshot_help
											lv_snapshot_menu "${gv_Auswahl#HELP }"
											;;
										$lv_Logical_Vol)
											# Auswahl eines vorhandenen LV# {{{
											lv
											if [ -n "${LV[1]}" ] ; then
												LV_SNAPSHOT_TITLE=(${lv_Snapshot}::${lv_LV})
												LV_SNAPSHOT_MENU=($LV_M)
												LV_SNAPSHOT_MSG=$(gettext 'Wählen Sie ein $lv_LV für den $lv_Snapshot aus.')
												radiolist "$LV_AUSWAHL" "$LV_CREATE_TITLE" "$LV_SNAPSHOT_MSG" "$LV_SNAPSHOT_MENU"
												#
												while [ "$gv_Auswahl" ] ; do
													case "$gv_Auswahl" in
														HELP*)	script_help lv_auswahl_help
															radiolist "${gv_Auswahl#HELP }" "$LV_CREATE_TITLE" "$LV_SNAPSHOT_MSG" "$LV_SNAPSHOT_MENU"
															;;
														*)
															LV_AUSWAHL="$gv_Auswahl"
															VG_AUSWAHL=${${(:/:)${LV_AUSWAHL}}[2]}
															;;
													esac
												done
											else
												no_lv_msg
											fi
											## }}}
											lv_snapshot_menu "$lv_Logical_Vol"
											;;
										$lv_Name)
											# Name des Snapshot eingeben, ohne Leerzeichen{{{
											if [[ -n $VG_AUSWAHL ]] ; then
												LV_NAME_TITLE=(${lv_Snapshot}::${lv_Name})
												LV_NAME_MSG=$(gettext 'Geben Sie bitte hier den Namen ihres $lv_Snapshot, ohne Leerzeichen, ein.')
												U_OPT="-"
												inputbox "$LV_NAME_TITLE" "$LV_NAME_MSG" "$SNAP_NAME"
												if [ "$gv_Auswahl" ] ; then
													if ! lvdisplay /dev/${VG_AUSWAHL:-**}/${gv_Auswahl} &>/dev/null ; then
														SNAP_NAME="$gv_Auswahl"
													else
														MSG=$(gettext 'Der Name für dieses $lv_Snapshot existiert schon.')
														msgbox "$gv_Info" "$MSG"
													fi
												else
													SNAP_NAME=""
												fi
											else
												no_select_lv_msg
											fi
											#}}}
											lv_snapshot_menu $lv_Name
											;;
										$lv_Size)
											# Grösse des Snapshot angeben{{{
											if [ -n "$VG_AUSWAHL" ] ; then
												vg_free_size "$VG_AUSWAHL"
												#
												LV_SIZE_TITLE=(${lv_Snapshot}::${lv_Size})
												LV_SIZE_MSG=$(gettext 'Geben Sie bitte hier die Grösse ihres $lv_Snapshot ein (1GiB = 1GigaByte = 1024 Megabyte). Es sind noch "$VG_FREE_SIZE_ME" frei.')
												#
												number_input -D "$LV_SIZE_TITLE" "$LV_SIZE_MSG" "$SIZE"
												if [ -n "$NUMBER" ] ; then
														# Laufwerksangaben (NUMBER) in Byte umrechnen
														number_size_to_mib
														if [[ "$LV_SIZE_MIB" -le "$VG_FREE_SIZE" ]] ; then
														SIZE="$NUMBER"
														CREATE_SIZE="${LV_SIZE_MIB}m"
													else
														over_size_msg
														unset -- SIZE CREATE_SIZE
													fi
												fi
											else
												no_select_lv_msg
											fi
											#}}}
											lv_snapshot_menu $lv_Size
											;;
										$gv_Create)
											# Snapshot erzeugen{{{
											if [ -n "$LV_AUSWAHL" -a -n "$SNAP_NAME" -a -n "$CREATE_SIZE" ] ; then
												lvcreate -v -s -n $SNAP_NAME -L${CREATE_SIZE} $LV_AUSWAHL 2>&1 | \
													progressbox $gv_Create "$SNAP_NAME" || \
													prog_failure
												break
											else
												MSG=$(gettext 'Sie müssen erst die Menüpunkte $lv_Logical_Vol, $lv_Name, und $lv_Size einstellen.')
												msgbox "$gv_Attention" "$MSG"
												lv_snapshot_menu
											fi
											#}}}
											;;
										$gv_Back)
											break
											;;
									esac
								done
								## }}}
								lv_what_create_menu $lv_Snapshot
								;;
							$gv_Back)
								break
								;;
						esac
					done
					## }}}
					lv_menue $gv_Create
					;;
				$lv_Enlarge)
					# LV vergrössern{{{
					lv -a
					if [ -n "${LV[1]}" ] ; then
						LV_ENLARGE_MENU=($LV_M)
						LV_ENLARGE_TITLE=(${lv_Logical_Vol}::${lv_Enlarge})
						LV_ENLARGE_MSG=$(gettext 'Wählen Sie ein $lv_LV zum vergrössern aus.')
						radiolist "$LV_DEV" "$LV_ENLARGE_TITLE" "$LV_ENLARGE_MSG" "$LV_ENLARGE_MENU"
						#
						while [ "$gv_Auswahl" ] ; do
							case "$gv_Auswahl" in
								HELP*)	script_help lv_auswahl_help
									radiolist "${gv_Auswahl#HELP }" "$LV_ENLARGE_TITLE" "$LV_ENLARGE_MSG" "$LV_ENLARGE_MENU"
									;;
								*)
									LV_DEV="$gv_Auswahl"
									VG_NAME="${${LV_DEV%/*}##*/}"
									#
									# vorhandene LV Grösse heraus finden.
									lv_free_size "$LV_DEV"
									# Nach noch freien Platz auf der VG suchen.
									vg_free_size "$VG_NAME"
									# Die Variablen VG_FREE_SIZE, VG_FREE_SIZE_ME
									# werden von der Funktion vg_free_size belegt.
									if [ "$VG_FREE_SIZE" != 0 ] ; then
										LV_ENLARGE_SIZE_MSG=$(gettext 'Geben Sie die Grösse ein um die das $lv_LV vergrössert werden soll (1GiB = 1GibiByte = 1024 Mebibyte). Es sind noch "$VG_FREE_SIZE_ME" frei.')
										number_input -D "$LV_ENLARGE_TITLE" "$LV_ENLARGE_SIZE_MSG"
										#
										while [ -n "$NUMBER" ] ; do
											# Laufwerksangaben (NUMBER) in Byte umrechnen
											number_size_to_mib
											if [[ $LV_SIZE_MIB -le $VG_FREE_SIZE ]] ; then
												# vorhandene LV Size  + neue LV Size.
												# Die Variable LV_SIZE wird von der
												# Funktion lv_free_size belegt.
												(( LV_NEW_SIZE = LV_SIZE + LV_SIZE_MIB ))
												# Dateisystem checken und vergrössern.
												lv_resize +${LV_NEW_SIZE} "$LV_DEV"
												break
											else
												over_size_msg
												number_input -D "$RESIZE_TITLE" "$LV_ENLARGE_SIZE_MSG"
											fi
										done
									else
										MSG=$(gettext 'Es ist kein freier Platz mehr für das $lv_LV vorhanden.')
										msgbox "$gv_Info" "$MSG"
									fi
									break
									;;
							esac
						done
					else
						no_lv_msg
					fi
					#}}}
					lv_menue $lv_Enlarge
					;;
				$lv_Reduce)
					# LV verkleinern{{{
					lv -a
					if [ "${LV[1]}" ] ; then
						LV_REDUCE_MENU=($LV_M)
						LV_REDUCE_TITLE=(${lv_Logical_Vol}::${lv_Reduce})
						LV_REDUCE_MSG=$(gettext 'Wählen Sie eine $lv_LV zum verkleinern aus.')
						radiolist "$LV_DEV" "$LV_REDUCE_TITLE" "$LV_REDUCE_MSG" "$LV_REDUCE_MENU"
						#
						while [ "$gv_Auswahl" ] ; do
							case "$gv_Auswahl" in
								HELP*)	script_help lv_auswahl_help
									radiolist "${gv_Auswahl#HELP }" "$LV_REDUCE_TITLE" "$LV_REDUCE_MSG" "$LV_REDUCE_MENU"
									;;
								*)	LV_DEV="$gv_Auswahl"
									# Variable LV_SIZE belegen.
									lv_free_size $LV_DEV
									# Die Variablen LV_SIZE, LV_SIZE_ME
									# wird von der Funktion lv_free_size belegt.
									#
									LV_REDUCE_SIZE_MSG=$(gettext 'Geben Sie die Grösse ein, um die ihr $lv_LV verkleinert werden soll (100MiB = 100MebiByte = 102400 KiloByte). Diese $lv_LV besitzt insgesamt "$LV_SIZE_ME".')
									number_input -D "$LV_REDUCE_TITLE" "$LV_REDUCE_SIZE_MSG"
									#
									while [ -n "$NUMBER" ] ; do
										# Laufwerksangaben (NUMBER) in Byte umrechnen
										number_size_to_mib
										if [[ $LV_SIZE_MIB -lt $LV_SIZE ]] ; then
											# vorhandene LV Size  - neue LV Size.
											# Die Variable LV_SIZE wird von der
											# Funktion lv_free_size belegt.
											(( LV_NEW_SIZE = LV_SIZE - LV_SIZE_MIB ))
											# Dateisystem checken und verkleinern.
											lv_resize -${LV_NEW_SIZE} "$LV_DEV"
											break
										else
											over_size_msg
											number_input -D "$LV_REDUCE_TITLE" "$LV_REDUCE_SIZE_MSG"
										fi
									done
									break
									;;
							esac
						done
					else
						no_lv_msg
					fi
					#}}}
					lv_menue $lv_Reduce
					;;
				$lv_Rename)
					# umbennen einer lV{{{
					lv -a
					#
					if [ "${LV[1]}" ] ; then
						local O_Lv
						LV_RENAME_TITLE=(${lv_Logical_Vol}::${lv_Rename})
						LV_RENAME_MSG=$(gettext 'Wählen Sie eine LV zum umbenennen aus.')
						# Funktion (lv_rename_menu)
						lv_rename_menu() {
							LV_RENAME_MENU=($LV_E)
							menubox "$1" "$LV_RENAME_TITLE" "$LV_RENAME_MSG" "$LV_RENAME_MENU"  
						}
						#
						lv_rename_menu "$O_Lv"
						while [ "$gv_Auswahl" ] ; do
							case $gv_Auswahl in
								HELP*)	script_help lv_replace_help
									lv_rename_menu "${gv_Auswahl#HELP }"
									;;
								*)
									# neuen Namen für die LV eingeben
									O_Lv=$gv_Auswahl
									# LV umounten
									mount_check -u "$O_Lv"
									U_OPT="-"
									LV_NEW_NAME=$(gettext 'Geben Sie einen neuen Namen für das $lv_LV $O_Lv, ohne Leerzeichen, ein.')
									inputbox "$LV_RENAME_TITLE" "$LV_NEW_NAME"
									#
									if [ "$gv_Auswahl" ] ; then
										Lv_Path="${O_Lv%/*}"
										lvrename -v $O_Lv ${Lv_Path}/${gv_Auswahl} 2>&1 | progressbox $lv_Rename "$gv_Auswahl" || prog_failure
									else
										no_input_msg
									fi
									break
									;;
							esac
						done
					else
						no_lv_msg
					fi
					#}}}
					lv_menue $lv_Rename
					;;
				$gv_Delete)
					# Löschen von LVs{{{
					lv -a
					# Sind LVs vorhanden, werden sie zur Auswahl gestellt.
					if [ "${LV[1]}" ] ; then
						LV_DEL_MENU=($LV_M)
						LV_DEL_TITLE=(${lv_Logical_Vol}::${gv_Delete})
						LV_DEL_MSG=$(gettext 'Wählen Sie ein oder mehrere ${lv_LV}s zum löschen aus.')
						checklist "" "$LV_DEL_TITLE" "$LV_DEL_MSG" "$LV_DEL_MENU"
						#
						while [ "$gv_Auswahl" ] ; do
							case "$gv_Auswahl" in
								HELP*)	script_help lv_del_help
									checklist "${gv_Auswahl#HELP }" "$LV_DEL_TITLE" "$LV_DEL_MSG" "$LV_DEL_MENU"
									;;
								*)
									# löschen der LVs
									Anz=${(w)#gv_Auswahl}
									DEVS="$gv_Auswahl"
									Devs=${gv_Auswahl//\ /\\n}
									MSG=$(gettext 'Jetzt werden alle ausgewählten logischen Volumes gelöscht.\n$Devs\n\nFortfahren (${gv_Yes}/${gv_No})?')
									yesno "$gv_Attention" "$MSG" "" "$Anz"
									if [ "$gv_Auswahl" = yes ] ; then
										for i in ${=DEVS} ; {
											# LVs umounten
											mount_check -u "$i"
										}
										# LVs beenden
										lvchange -a n ${=DEVS} &>/dev/null || prog_failure
										# LVs löschen
										lvremove -v -f ${=DEVS} 2>&1 | progressbox $gv_Delete "${=DEVS}" || prog_failure
									fi
									break
									;;
							esac
						done
					else
						no_lv_msg
					fi
					#}}}
					lv_menue $gv_Delete
					;;
				$gv_Back)	break
					;;
			esac
		done
	else
		no_vg_msg
	fi
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
